---
title: "Quickstart"
format: html
---

**Introducing GovSupport**

GovSupport is an AI-powered assistant acts as a copilot for customer service agents, empowering them to provide high-quality, actionable advice quickly and securely. When agents GovSupport a question, GovSupport will provide an answer based on all the content sources it's been provided and give the agent references to the information.

GovSupport is designed to be used in settings where customer service advisers are supervised by experienced staff who can verify GovSupport's responses. GovSupport's responses are sent to a supervisor to review before they are made available to the customer-facing adviser. This "human in the loop" validation system is employed to mitigate risk, ensuring advice accuracy and reliability.

**Environments**

GovSupport is built using AWS Serverless architecture and currently integrates with Google Workspace. We plan on building a Teams version later in the year.

![GovSupport Workflow](assets/GovSupport%20Business%20Process.png)

**Installation**




**Adding users**

There are two levels of user: supervisors and advisors.

Advisors can ask questions to GovSupport, and will only see responses that have been approved by a supervisor (they will see a supervisor's comments if the supervisor does not approve GovSupport's response).

Supervisors have elevated privileges. They can: approve GovSupport's responses, add users (including other supervisors) and remove users.

The mechanism for adding both types of user is the same. To add a user, a user with supervisor permissions types '/addUser' in the chat bar of a supervisor space.

![Add users through slash commands in the chat](assets/GovSupportAddUser1.png)

![Input the user's email address](assets/GovSupportAddUser2.png)

**Removing users**

Supervisors can remove other users.

![Remove users through slash commands in the chat](assets/removeuser1.png)
![Enter the email address of the user to remove](assets/removeuser2.png)


```{mermaid}

classDiagram
    class Messages {
        messageId
        message
        conversationId
        userEmail
        client
        messageRecievedTimestamp
        messageSentTimestamp
    }
    class Responses {
        responseId
        llmResponseJson
        llmPrompt
        messageId
        llmAnswer
        userThankedTimestamp
        llmPromptTimestamp
        llmResponseTimestamp
        approverEmail
        approved
        approvalTimestamp
        userResponseTimestamp
    }
    class Users {
        userEmail
        supervisionSpaceId
        createdAt
        isApprover
        isSuperUser
    }
    Users -- Messages : UserId
    Messages -- Responses : MessageId
```

**Reviewing a GovSupport response**

![Review a response 1](assets/ResponseApproval1.png)
![Review a response 1](assets/ResponseApproval2.png)

**Approve the response**

**Reject the response**
